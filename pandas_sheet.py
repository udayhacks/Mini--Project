# -*- coding: utf-8 -*-
"""pandas sheet.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yc_gYQvsBcaL24cqC6vuDgOF1osL66gp
"""

import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload('X:\titanic')

newData = pd.read_csv('/content/X:	itanic/test.csv')

newData

newData.describe()

from matplotlib import pyplot as plt
_df_0['PassengerId'].plot(kind='hist', bins=20, title='PassengerId')
plt.gca().spines[['top', 'right',]].set_visible(False)

newData.Sex.describe()

from os import ttyname
#count the value
#newData.Sex.value_counts()
#normalize is for frequency ;

(newData.Pclass.value_counts(dropna=False,ascending=True,normalize=True) *100)[3]

# group by class
newData.groupby('Age').value_counts().head()

k = newData.assign(insert=[1]*len(newData))
k
# assign create a new dataframe
k.insert(0,"SN",[i for i in range(1,len(newData)+1)])
#insert just inserts

k

## drop it just deletes temporarly
## inplaces == true for perment
#k.drop("insert",axis = 1)

k

#k.drop("insert",axis = 1,inplace = True)
k

#grabbing loacations
k.loc[4,"Name"]

k.loc[[1,2],["Name","Sex","Age"]]

from matplotlib import pyplot as plt
_df_34['Age'].plot(kind='line', figsize=(8, 4), title='Age')
plt.gca().spines[['top', 'right']].set_visible(False)

## conditionaal
k[k == 62.0][['Name',"Age"]]

# set index
k.set_index("SN")

k.set_index("SN",inplace = True)
#reset_index to reset

#fillna

#apply(a) for function use def a() : pass

import numpy as np
import matplotlib.pyplot as plt

# Define two 2D vectors
a = np.array([2, 3])
b = np.array([1, 0])  # purely horizontal

# Calculate the dot product
dot = np.dot(a, b)
print("Dot Product:", dot)

# Plot the vectors
plt.quiver(0, 0, a[0], a[1], angles='xy', scale_units='xy', scale=1, color='r', label='a')
plt.quiver(0, 0, b[0], b[1], angles='xy', scale_units='xy', scale=1, color='b', label='b')
plt.xlim(-1, 4)
plt.ylim(-1, 4)
plt.grid()
plt.axhline(0, color='gray')
plt.axvline(0, color='gray')
plt.gca().set_aspect('equal', adjustable='box')
plt.legend()
plt.title(f'Dot Product: {dot}')
plt.show()